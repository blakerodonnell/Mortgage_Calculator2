import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import React from "react";
import { render } from "react-dom";
import { output } from "@/next.config.js";

export default function Home() {
  const [inputs, setInputs] = useState({
    listingPrice: 0,
    discount: 15,
    desiredYield: 0,
    rentRate: 20,
    duration: 5,
  });
  console.log(inputs);

  const [outputs, setOutputs] = useState({
    targetPrice: 0,
    rent: 0,
    convertedRent: 0,
    totalMonthlyRent: 0,
    futureBuyBackPrice: 0,
  });
  console.log(outputs);

  function updateListingPrice(e) {
    setInputs({ ...inputs, listingPrice: Number(e.target.value) });
  }
  function updateDiscount(e) {
    setInputs({ ...inputs, discount: Number(e.target.value) });
  }

  function updateRentRate(e) {
    setInputs({ ...inputs, rentRate: Number(e.target.value) });
  }

  function updateDuration(e) {
    setInputs({ ...inputs, duration: Number(e.target.value) });
  }

  function handleSubmit(e) {
    e.preventDefault();

    const listingPrice = Number(e.target[0].value);
    const discount = Number(e.target[1].value);
    const desiredYield = Number(e.target[2].value);
    const rentRate = Number(e.target[3].value);
    const duration = Number(
      Array.from(e.target)
        .slice(4, -1)
        .find((x) => x.checked).value
    );

    const formattedListingPrice = listingPrice.toLocaleString(undefined, {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    });

    setInputs({
      ...inputs,
      formattedListingPrice,
      discount,
      desiredYield,
      rentRate,
      duration,
    });

    const targetPrice = listingPrice * (1 - discount / 100);
    const rent = (targetPrice / 12) * (desiredYield / 100);
    const convertedRent =
      (targetPrice / 12) * (desiredYield / 100) * (rentRate / 100);
    const totalMonthlyRent = rent + convertedRent;
    const futureBuyBackPrice = targetPrice - convertedRent * duration * 12;

    const formattedTargetPrice = targetPrice.toLocaleString(undefined, {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    });
    const formattedRent = rent.toLocaleString(undefined, {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    });
    const formattedConvertedRent = convertedRent.toLocaleString(undefined, {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    });
    const formattedTotalMonthlyRent = totalMonthlyRent.toLocaleString(
      undefined,
      { minimumFractionDigits: 0, maximumFractionDigits: 0 }
    );
    const formattedFutureBuyBackPrice = futureBuyBackPrice.toLocaleString(
      undefined,
      { minimumFractionDigits: 0, maximumFractionDigits: 0 }
    );

    setOutputs({
      ...outputs,
      formattedTargetPrice,
      formattedRent,
      formattedConvertedRent,
      formattedTotalMonthlyRent,
      formattedFutureBuyBackPrice,
    });
  }

  return (
    <>
      <Head>
        <title>Keyzy</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.jpg" />
      </Head>
      <main className="p-4 font-outfit">
        <header className="text-2xl font-bold px-1 mb-6 font-outfit">
          <h1>Keyzy</h1>
        </header>
        <div>
          <section>
            <h2 className="text-lg font-bold mb-4">Inputs</h2>
            <form
              className="border-2 border-none flex flex-col gap-6"
              onSubmit={handleSubmit}
            >
              <div className="flex gap-2 justify-between items-center">
                <label className="w-1/3" htmlFor="listing-price">
                  Listing Price
                </label>
                <input
                  type="number"
                  name="listing-price"
                  id="listing-price"
                  className="form-input w-2/3 h-12 bg-parchment rounded text-lg"
                  min="20000"
                  placeholder="£"
                  onChange={updateListingPrice}
                />
              </div>
              <div className="flex gap-2 justify-between items-center">
                <label className="w-1/3" htmlFor="discountvasking">
                  Discount vs asking price
                </label>
                <div className="w-2/3 h-12 flex flex-col justify-center">
                  <span className="block text-center">{inputs.discount}%</span>
                  <input
                    className="accent-azure"
                    type="range"
                    name="discountvasking"
                    id="discountvasking"
                    min="0"
                    max="30"
                    value={inputs.discount}
                    onChange={updateDiscount}
                  />
                </div>
              </div>
              <div className="flex gap-2 justify-between items-center">
                <label className="w-1/3" htmlFor="desired-yield">
                  Desired yield
                </label>
                <input
                  type="number"
                  name="desired-yeild"
                  id="desired-yield"
                  min="4.9"
                  max="9"
                  step="0.1"
                  placeholder="%"
                  className="form-input w-1/4 h-12 bg-parchment rounded text-lg"
                />
              </div>

              <div className="flex gap-2 items-center">
                <label className="w-1/3" htmlFor="converted-rent">
                  Converted rent rate
                </label>
                <div className="w-2/3 h-12 flex flex-col justify-center">
                  <span className="block text-center">{inputs.rentRate}%</span>

                  <input
                    className="accent-azure"
                    type="range"
                    name="converted-rent"
                    id="converted-rent"
                    min="0"
                    max="25"
                    step="5"
                    value={inputs.rentRate}
                    onChange={updateRentRate}
                  />
                </div>
              </div>
              <div
                className="flex gap-2 justify-between items-center mb-4"
                onChange={updateDuration}
              >
                <label className="w-1/3 block" htmlFor="duration">
                  Duration
                </label>
                <div className="w-2/3 flex justify-between items-center">
                  <div>
                    <input
                      type="radio"
                      className="form-radio text-azure"
                      name="duration"
                      id="duration-3"
                      value="3"
                    />
                    <label className="w-16 ml-2" htmlFor="duration-3">
                      3 years
                    </label>
                  </div>
                  <div className="">
                    <input
                      type="radio"
                      className="form-radio text-azure"
                      name="duration"
                      id="duration-5"
                      value="5"
                      defaultChecked={true}
                    />
                    <label className="w-16 ml-2" htmlFor="duration-5">
                      5 years
                    </label>
                  </div>
                  <div className="">
                    <input
                      type="radio"
                      className="form-radio text-azure"
                      name="duration"
                      id="duration-7"
                      value="7"
                    />
                    <label className="w-16 ml-2" htmlFor="duration-7">
                      7 years
                    </label>
                  </div>
                </div>
              </div>
              <button className="h-12 bg-azure text-white font-bold text-lg w-24 rounded hover:opacity-70">
                Submit
              </button>
            </form>
          </section>
        </div>
        <div className="md:max-md:flex hidden md:block text-center p-5 bg-magenta text-white rounded">
          Not tablet friendly - please use mobile or desktop device.
        </div>
      </main>
      <main className="p-4 font-outfit">
        <section>
          <h2 className="text-lg font-bold mb-4">Outputs</h2>
          <div className="border-2 border-solid flex flex-col gap-1 justify-between p-4">
            <p>Listing price: £{inputs.formattedListingPrice}</p>
            <p> Target price: £{outputs.formattedTargetPrice}</p>
            <p>Total monthly rent: £{outputs.formattedTotalMonthlyRent}</p>
            <p className="p-2">Rent: £{outputs.formattedRent}</p>
            <p className="p-2">
              Converted rent: £{outputs.formattedConvertedRent}
            </p>
            <p>Future buy back price: £{outputs.formattedFutureBuyBackPrice}</p>
          </div>
        </section>
      </main>
    </>
  );
}
